"use strict";(self.webpackChunkeditor_cli=self.webpackChunkeditor_cli||[]).push([[2338],{52338:function(t,h,i){i.r(h),i.d(h,{default:function(){return d}});var e={name:"BlockLeftRightUpArrow",data(){return{}},props:["transConfig"],computed:{d:function(){let t=this.transConfig,h=t.splitX[0],i=t.splitY[0],e=t.splitX[1];return i=Math.min(t.height/4,i),i=Math.max(t.lineWidth/2,i),h=Math.min(t.width/2,h),e=Math.max(i/t.height*t.width,e),e=Math.min(t.width/2,e),h=Math.max(e,h),this.$emit("updatePoint",[{x:h,y:i},{x:e,y:t.lineWidth/2}]),`M${t.width/2} ${t.lineWidth/2}L${e} ${i}L${h} ${i}L${h} ${(h+e)/t.width*t.height}L${i/t.height*t.width} ${(h+e)/t.width*t.height}L${i/t.height*t.width} ${2*e/t.width*t.height}L${t.lineWidth/2} ${(t.width/2+e)/t.width*t.height}L${i/t.height*t.width} ${t.height-t.lineWidth/2}L${i/t.height*t.width} ${(t.width-h+e)/t.width*t.height}L${(t.height-i)/t.height*t.width} ${(t.width-h+e)/t.width*t.height}L${(t.height-i)/t.height*t.width} ${t.height-t.lineWidth/2}L${t.width-t.lineWidth/2} ${(t.width/2+e)/t.width*t.height}L${(t.height-i)/t.height*t.width} ${2*e/t.width*t.height}L${(t.height-i)/t.height*t.width} ${(h+e)/t.width*t.height}L${t.width-h} ${(h+e)/t.width*t.height}L${t.width-h} ${i}L${t.width-e} ${i}z`}}},d=(0,i(1001).Z)(e,(function(){var t=this,h=t._self._c;return h("g",[h("path",{attrs:{d:t.d,stroke:t.transConfig.strokeColor,"stroke-width":t.transConfig.lineWidth,fill:t.transConfig.fillColor,"stroke-linejoin":"round","stroke-linecap":"round"}})])}),[],!1,null,"1418fdf2",null).exports}}]);