"use strict";(self.webpackChunkeditor_cli=self.webpackChunkeditor_cli||[]).push([[6457],{56255:function(h,t,i){i.r(t),i.d(t,{default:function(){return d}});var e={name:"BlockQuadArrow",data(){return{}},props:["transConfig"],computed:{d:function(){let h=this.transConfig,t=h.splitX[0],i=h.splitY[0],e=h.splitX[1];return e=Math.max(i,e),t=Math.max(e,t),e=Math.min(h.width/2,e),t=Math.min(h.width/2,t),i=Math.min(h.height/4,i),i=Math.max(h.lineWidth/2,i),this.$emit("updatePoint",[{x:t,y:i},{x:e,y:h.lineWidth/2}]),`M${h.width/2} ${h.lineWidth/2}L${e} ${i}L${t} ${i}L${t} ${t/h.width*h.height}L${i/h.height*h.width} ${t/h.width*h.height}L${i/h.height*h.width} ${e/h.width*h.height}L${h.lineWidth/2} ${h.height/2}L${i/h.height*h.width} ${(h.width-e)/h.width*h.height}L${i/h.height*h.width} ${(h.width-t)/h.width*h.height}L${t} ${(h.width-t)/h.width*h.height}L${t} ${h.height-i}L${e} ${h.height-i}L${h.width/2} ${h.height-h.lineWidth/2}L${h.width-e} ${h.height-i}L${h.width-t} ${h.height-i}L${h.width-t} ${(h.width-t)/h.width*h.height}L${(h.height-i)/h.height*h.width} ${(h.width-t)/h.width*h.height}L${(h.height-i)/h.height*h.width} ${(h.width-e)/h.width*h.height}L${h.width-h.lineWidth/2} ${h.height/2}L${(h.height-i)/h.height*h.width} ${e/h.width*h.height}L${(h.height-i)/h.height*h.width} ${t/h.width*h.height}L${h.width-t} ${t/h.width*h.height}L${h.width-t} ${i}L${h.width-e} ${i}z`}}},d=(0,i(1001).Z)(e,(function(){var h=this,t=h._self._c;return t("g",[t("path",{attrs:{d:h.d,stroke:h.transConfig.strokeColor,"stroke-width":h.transConfig.lineWidth,fill:h.transConfig.fillColor,"stroke-linejoin":"round","stroke-linecap":"round"}})])}),[],!1,null,"63555c16",null).exports}}]);